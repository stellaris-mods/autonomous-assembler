###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


# Hooooly fuckballs, on_ship_built triggers for AIs in 1.8.
namespace = assShip

# Chained from:
# 1. MTTH assShip.102
# 2. on_ship_built assShip.1
ship_event = {
	id = assShip.9001
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		# This is set by the dock operation, a timed flag for 3 months
		NOT = { has_ship_flag = "ass_halt_operations" }
		is_ship_size = autonomous_assembler
	}
	immediate = {
		if = {
			limit = { owner = { has_country_flag = "ass_halt_operations" } }
			set_timed_ship_flag = {
				flag = "ass_halt_operations"
				days = 90
			}
			else = {
				ass_init_stage1 = yes
			}
		}
	}
}
# Triggered exclusively by the ass_go_home project
ship_event = {
	id = assShip.9002
	hide_window = yes
	is_triggered_only = yes
	immediate = { ass_init_stage1 = yes }
}

# ZZZ This + on_ship_built are the only two places that invoke assShip.1
# on_monthly_pulse
event = {
	id = assShip.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_ship = {
			limit = {
				# Maybe prevent "Checking trigger against an unsupported
				# scope!" when scope type=none for some reason.
				exists = owner
				exists = fleet
				# And maybe not. I've only seen the error once.
				is_ship_size = autonomous_assembler
				owner = {
					NOT = { has_country_flag = "ass_halt_operations" }
				}
				ass_has_operation = no
				fleet = {
					is_fleet_idle = yes
				}
			}
			# ROOT needs to be the ship, so dont invoke the init effect directly
			ship_event = { id = assShip.9001 }
		}
	}
}

# on_ship_built
# Root = Ship
# From = Planet
ship_event = {
	id = assShip.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ship_size = autonomous_assembler
		# This is set by the dock operation, a timed flag for 3 months
		NOT = { has_ship_flag = "ass_halt_operations" }
	}
	immediate = {
		if = {
			limit = { owner = { is_ai = yes } }
			# Event lock the fleet immediately and forever, so
			# that the AI doesn't interfere with the ass ops.
			# I have not tested whether this works.
			fleet = { set_event_locked = yes }
		}

		# Used so other mods (autobuild) can ignore this ship
		fleet = { set_fleet_flag = "autonomous_assembler" }

		ship_event = { id = assShip.9001 }
		# I have no idea when count_owned_ships updates, so delay 1 day.
		owner = { country_event = { id = assCountry.500 days = 1 } }
	}
}

# on_ship_order
# Root = Ship
# From = Country
ship_event = {
	id = assShip.100
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		# Hopefully checking a ship-scope exclusive trigger first prevents
		# the "Firing ship event assShip.100 in the wrong scope!" error.
		has_ship_flag = "ass_id"
		is_ship_size = autonomous_assembler
	}
	immediate = {
		# XXX We probably set the name more times than we need to right now.
		ass_set_fleet_name = yes
		fleet = {
			if = {
				limit = { has_fleet_flag = "autonomous_operation" }
				if = {
					limit = { has_fleet_flag = "autonomous_initial_order" }
						remove_fleet_flag = "autonomous_initial_order"
					else = {
						assdbg_manual_order = yes
						ROOT = { ass_stage4_abort_operation = yes }
					}
				}
			}
		}
	}
}

# assShip.1000 and assShip.2000 are essentially stage 3 for the operations listed

ship_event = {
	id = assShip.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = fleet
				fleet = { exists = solar_system }
			}
			remove_ship_flag = "ass_constructing_station"
			switch = {
				trigger = has_ship_flag
				ass_op_minerals = { ass_stage4_complete_minerals = yes }
				ass_op_energy   = { ass_stage4_complete_energy = yes }
				ass_op_research = { ass_stage4_complete_research = yes }
				ass_op_military = { ass_stage4_complete_military = yes }
				ass_op_wormhole = { ass_stage4_complete_wormhole = yes }
			}
			ass_stage4_complete_3rd = yes
			else = {
				ass_stage4_abort_operation = yes
			}
		}
	}
}

# on monthly pulse
event = {
	id = assShip.2000
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# I don't trust every_country (or any every_ effect), so try to
		# limit{} as much as possible.
		every_country = {
			limit = {
				has_technology = tech_autonomous_assembler
				check_variable = { which = "AssReserve" value > 0 }
				any_owned_ship = { has_ship_flag = "ass_waiting_for_cash" }
			}
			ass_account_update_empire = yes

			every_owned_ship = {
				limit = {
					is_ship_size = autonomous_assembler
					has_ship_flag = "ass_waiting_for_cash"
				}
				set_ship_flag = "ass_check_cash"
			}

			while = {
				limit = { any_owned_ship = { has_ship_flag = "ass_check_cash" } }
				random_owned_ship = {
					limit = { has_ship_flag = "ass_check_cash" }
					remove_ship_flag = "ass_check_cash"
					ass_stage3_build = yes
				}
			}
		}
	}
}

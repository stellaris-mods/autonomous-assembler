###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


namespace = assInit

# on_game_start
event = {
	id = assInit.1
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_global_flag = "has_auto_assembler"
	}
}

# invoked from mod menu
country_event = {
	id = assInit.10
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = { limit = { has_country_flag = "ass_free_tech" }
			every_country = {
				limit = {
					OR = {
						is_ai = no
						is_country_type = "default"
					}
					# Only players or default AI empires get the tech.
					# Prevents primitives and such from getting it.
				}
				give_technology = {
					tech = tech_autonomous_assembler
					message = yes
				}
			}
		}
	}
}

# on_tech_increased
country_event = {
	id = assInit.100
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_global_flag = "ass_free_ship"
		last_increased_tech = "tech_autonomous_assembler"
	}
	# ZZZ Delay by one day to allow the auto-design to appear
	immediate = { country_event = { id = assInit.101 days = 1 } }
}

#
# None of the below, as far as I can tell, allowed preventing the AI
# from dismantling the ship immediately.
# Also, adding a static_modifier that made the ship entirely free of
# upkeep also did not prevent the AI from dismantling the ship instantly.
#
# set_event_locked = yes
#
# create_ship properties:
# upgradable = no
# ftl = country
#
# create_fleet properties:
# set_take_point = yes
#
# create_fleet settings:
# settings = {
# spawn_debris = no
# can_upgrade = no
# can_change_composition = no
# can_auto_repair
# can_recharge_shield
# can_change_leader = no
# garrison = yes
# ai_ignore_strength = yes
# is_boss = yes
#
# I have not tested tweaking any of these defines.
# I think the best bet that wont interfere with the AI too much in other ways
# is to simply give the AI a add_monthly_resource_mult at start so that its
# income is above DISBAND_THRESHOLD.
# However, like I said above, when I made the fleet entirely void of upkeep,
# the AI still disbanded it.
#
# MAX_SHIPS_DISBAND_PER_WEEK = 5
# If budget does not cover at least this fraction of the navy maintenance disband ships & stations
# DISBAND_THRESHOLD = 0.8
# Number of constructor ships of AI is the number of planets times this value
# CONSTRUCTOR_SHIPS_MUL = 0.04
# AI will disband ships if wanted + this value < owned
# THRESHOLD_DISBAND_SHIPS = 3
#

country_event = {
	id = assInit.101
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# look above, the AI simply deletes the ship immediately.
		# I don't know why, but it might be because of budget.
		OR = {
			AND = {
				is_ai = yes
				years_passed > 5
			}
			is_ai = no
		}
		exists = capital_scope
	}

	immediate = {
		create_fleet = {
			effect = {
				set_owner = ROOT
				# Used so other mods (autobuild) can ignore this ship
				set_fleet_flag = "autonomous_assembler"
				create_ship = {
					name = random
					random_existing_design = autonomous_assembler
				}
				set_fleet_stance = evasive
				set_location = ROOT.capital_scope
			}
		}
		# Delay this, too, so that count_owned_ships picks it up
		country_event = { id = assCountry.500 days = 1 }
		# We could try to initiate an operation immediately, but it always fails
		# because nothing is surveyed etc.
		# MTTH event triggers after a few days anyway.
	}
}

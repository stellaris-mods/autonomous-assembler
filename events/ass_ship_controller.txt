
# Hooooly fuckballs, on_ship_built triggers for AIs in 1.8.
namespace = assShip

ship_event = {
	id = assShip.9001
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = { is_ai = no }
		is_ship_size = autonomous_assembler
		# This is set by the dock operation, a timed flag for 3 months
		NOT = { has_ship_flag = "ass_halt_operations" }
	}
	immediate = {
		if = {
			limit = { owner = { has_country_flag = "ass_halt_operations" } }
			set_timed_ship_flag = {
				flag = "ass_halt_operations"
				days = 90
			}
			else = {
				ass_init_stage1 = yes
			}
		}
	}
}

# ZZZ This + on_ship_built are the only two places that invoke assShip.1
# on_monthly_pulse
event = {
	id = assShip.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_ship = {
			limit = {
				is_ship_size = autonomous_assembler
				owner = {
					is_ai = no
					NOT = { has_country_flag = "ass_halt_operations" }
				}
				ass_has_operation = no
				fleet = {
					is_fleet_idle = yes
				}
			}
			# ROOT needs to be the ship, so dont invoke the init effect directly
			ship_event = { id = assShip.9001 }
		}
	}
}

# on_ship_built
# Root = Ship
# From = Planet
ship_event = {
	id = assShip.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = { is_ai = no }
		is_ship_size = autonomous_assembler
		# This is set by the dock operation, a timed flag for 3 months
		NOT = { has_ship_flag = "ass_halt_operations" }
	}
	immediate = {
		ship_event = { id = assShip.9001 }
		# I have no idea when count_owned_ships updates, so delay 1 day.
		owner = { country_event = { id = assCountry.500 days = 1 } }
	}
}

# on_ship_order
# Root = Ship
# From = Country
ship_event = {
	id = assShip.100
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = { is_ai = no }
		is_ship_size = autonomous_assembler
		fleet = { has_fleet_flag = "autonomous_operation" }
	}
	immediate = {
		fleet = {
			if = {
				limit = { has_fleet_flag = "autonomous_initial_order" }
					remove_fleet_flag = "autonomous_initial_order"
				else = {
					log = "[Root.GetName]: Player gave ship a manual order, aborting."
					ROOT = { ass_op_abort = yes }
				}
			}
		}
	}
}

# on_ship_upgraded
# root = ship
ship_event = {
	id = assShip.200
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ship_size = autonomous_assembler
		owner = { is_ai = no }
	}
	immediate = {
		owner = {
			log = "[this.GetName] upgraded!"
		}
	}
}

# on_ship_destroyed_victim
# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
country_event = {
	id = assShip.300
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = no
		FROMFROM = { is_ship_size = autonomous_assembler }
	}
	immediate = {
		country_event = { id = assCountry.500 }
	}
}

# assShip.1000 and assShip.2000 are essentially stage 3 for the operations listed

ship_event = {
	id = assShip.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		switch = {
			trigger = has_ship_flag
			ass_minerals = { ass_stage4_minerals_complete = yes }
			ass_energy   = { ass_stage4_energy_complete = yes }
			ass_research = { ass_stage4_research_complete = yes }
			ass_military = { ass_stage4_military_complete = yes }
			ass_wormhole = { ass_stage4_wormhole_complete = yes }
		}
	}
}

# on monthly pulse
event = {
	id = assShip.2000
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = {
				is_ai = no
				any_owned_ship = { has_ship_flag = "ass_waiting_for_cash" }
			}
			ass_accounting_count_minerals = yes

			every_owned_ship = {
				limit = {
					is_ship_size = autonomous_assembler
					has_ship_flag = "ass_waiting_for_cash"
				}
				set_ship_flag = "ass_check_cash"
			}

			while = {
				limit = { any_owned_ship = { has_ship_flag = "ass_check_cash" } }
				random_owned_ship = {
					limit = { has_ship_flag = "ass_check_cash" }

					ass_accounting_update_fleet = yes
					ass_stage2_done = yes

					remove_ship_flag = "ass_check_cash"
				}
			}
		}
	}
}

###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


###############################################################################
# Generally, all the effects in this file:
# 1. Are invoked from the ship scope
# 2. Are invoked _before_ the target is set, or any relation is set
#
# However, #2 might be problematic. If you want me to change that, please
# let me know somehow.
#


@baseMilitaryXLarge = 2250
@baseMilitaryLarge = 1400
@baseMilitaryMedium = 700
@baseMilitarySmall = 250
@baseMining = 90
@baseResearch = 90
@baseWormhole = 75

# We don't have any operation for making frontier outposts yet.
# trait_ruler_expansionist: shipsize_outpost_station_build_cost_mult -0.15

# I can't immediately see any API to check which agenda is set
# agenda_defensive_focus: shipclass_military_station_build_cost_mult = -0.15
ass_discounts_deduct_military_cost = {
	if = { # -20%
		limit = { owner = { ruler = { has_trait = trait_ruler_fortifier } } }
		fleet = { multiply_variable = { which = "AssOperationCost" value = 0.8 } }
	}
	if = { # -15%
		limit = { owner = { has_technology = "tech_space_defense_station_improvement" } }
		fleet = { multiply_variable = { which = "AssOperationCost" value = 0.85 } }
	}
	# If you add any more, make sure to add them to events/ass_controller_marker.txt
}

ass_discounts_set_military_xlarge_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseMilitaryXLarge } }
	ass_discounts_deduct_military_cost = yes
}

ass_discounts_set_military_large_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseMilitaryLarge } }
	ass_discounts_deduct_military_cost = yes
}

ass_discounts_set_military_medium_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseMilitaryMedium } }
	ass_discounts_deduct_military_cost = yes
}

ass_discounts_set_military_small_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseMilitarySmall } }
	ass_discounts_deduct_military_cost = yes
}

ass_discounts_set_mining_station_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseMining } }
	if = { # trait_ruler_space_miner: shipsize_mining_station_build_cost_mult -0.25
		limit = { owner = { ruler = { has_trait = trait_ruler_space_miner } } }
		fleet = { multiply_variable = { which = "AssOperationCost" value = 0.75 } }
	}
}

ass_discounts_set_research_station_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseResearch } }
}

ass_discounts_set_wormhole_station_cost = {
	fleet = { set_variable = { which = "AssOperationCost" value = @baseWormhole } }
}


# While other effects in this file are invoked _before_ the target is set,
# that is not true for the spaceport module cost. This effect is invoked
# _after_ the target planet is set, and event_target:ass_target is always
# the planet. And PREV is the planet, too.
# THIS / ROOT is the ship.
ass_discounts_set_spaceport_module_cost = {
	fleet = {
		# Note how we don't reset the AssDiscount variable here.

		# country modifier zero_gravity_revelation = { spaceport_module_cost_mult = -0.1
		if = { limit = { owner = { has_modifier = zero_gravity_revelation } }
			change_variable = { which = "AssDiscount" value = 0.1 }
		}

		# trait_ruler_home_in_the_sky spaceport_module_cost_mult = -0.2
		if = { limit = { owner = { ruler = { has_trait = trait_ruler_home_in_the_sky } } }
			change_variable = { which = "AssDiscount" value = 0.2 }
		}

		# planet edict arms_race spaceport_module_cost_mult = -0.25
		if = { limit = { PREVPREV = { has_edict = arms_race } }
			change_variable = { which = "AssDiscount" value = 0.25 }
		}

		if = {
			limit = {
				PREVPREV = {
					exists = leader
					leader = { leader_class = governor }
				}
			}
			# governor leader_trait_retired_fleet_officer spaceport_module_cost_mult = -0.10
			if = { limit = { PREVPREV = { leader = { has_trait = leader_trait_retired_fleet_officer } } }
				change_variable = { which = "AssDiscount" value = 0.1 }
			}
			# governor leader_trait_ai_aided_design spaceport_module_cost_mult = -0.10
			if = { limit = { PREVPREV = { leader = { has_trait = leader_trait_ai_aided_design } } }
				change_variable = { which = "AssDiscount" value = 0.1 }
			}
		}

		if = { limit = { check_variable = { which = "AssDiscount" value > 0 } }
			# AssDiscount contains the cumulative discount, in percent decimal
			# Which means that in order to easily simply multiply the costs by
			# the discount, we need to convert for example 0.4 to 0.6, which
			# gives a 40% discount.
			subtract_variable = { which = "AssDiscount" value = 1 }
			multiply_variable = { which = "AssDiscount" value = -1 }

			if = { limit = { check_variable = { which = "AssOperationCost" value > 0 } }
				multiply_variable = { which = "AssOperationCost" value = "AssDiscount" }
			}
			if = { limit = { check_variable = { which = "AssOperationCostEnergy" value > 0 } }
				multiply_variable = { which = "AssOperationCostEnergy" value = "AssDiscount" }
			}
			if = { limit = { check_variable = { which = "AssOperationCostInfluence" value > 0 } }
				multiply_variable = { which = "AssOperationCostInfluence" value = "AssDiscount" }
			}
		}
		set_variable = { which = "AssDiscount" value = 0 } # Reset
	}
}

###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###

ass_stage1_marker_p1 = {
	owner = {
		if = {
			limit = {
				has_technology = "tech_ass_hexagon"
				any_owned_fleet = {
					ass_is_station_marker = yes
				}
			}
			random_owned_fleet = {
				limit = { ass_is_station_marker = yes }
				ROOT = {
					set_ship_flag = "ass_op_marker"
					# the cost of this operation is in the marker
				}
				log = "[Root.GetName]: Moving to [this.GetName] (Station Marker)"
				ass_relation_flag_fleet = yes
				ass_stage2_fleet_move = yes
			}
		}
	}
}

# This chains from assMarker.100, which uses ass_relation_get_any,
# which means that ass_target will be a fleet, and not a ship.
ass_stage4_complete_marker = {
	event_target:ass_target = {
		remove_fleet_flag = "ass_target"
	}
	# Clear relation flags and mark operation complete
	remove_ship_flag = "ass_relation_fleet"
	ass_stage4_operation_complete = yes
}

# In this effect, we set ass_target to a ship inside the fleet, so we can easily
# switch on has_component.
ass_stage3_marker_arrived = {
	assdbg_marker_arrived = yes
	PREVPREVPREV = {
		set_fleet_flag = "ass_marker_used" # Marker used up
		random_owned_ship = { # fleet ships
			save_event_target_as = ass_target
		}
	}
	event_target:ass_target = {
		switch = {
			trigger = has_component
			ASS_TYPE_SMALL = {
				ass_military_spawn_placeholders_50 = yes
			}
			ASS_TYPE_MEDIUM = {
				ass_military_spawn_placeholders_50 = yes
			}
			ASS_TYPE_LARGE = {
				ass_military_spawn_placeholders_80 = yes
			}
			ASS_TYPE_XLARGE = {
				ass_military_spawn_placeholders_80 = yes
			}
		}
	}

	# Removed by ass_stage4_operation_complete eventually.
	set_ship_flag = "ass_constructing_station"
	ass_set_fleet_name = yes

	# Build first station
	ship_event = { id = assMarker.100 days = 85 }
}


# THIS must be the ship
ass_stage2_fleet_reached = {
	# We dont need the event target, it's just much easier than prevprevprevprevprevprevprevprev
	PREVPREVPREV = { save_event_target_as = ass_target }
	if = {
		limit = { ass_has_operation = yes }
		if = {
			limit = {
				solar_system = {
					is_same_value = event_target:ass_target.solar_system
				}
				distance = {
					source = event_target:ass_target
					max_distance = 20
				}
			}
			log = "[this.GetName]: At fleet [ass_target.GetName]."
			ass_init_stage3 = yes
			else = {
				log = "[this.GetName]: ERROR: We are not close to fleet [ass_target.GetName]."
				ass_op_abort = yes
			}
		}
		else = {
			log = "[this.GetName]: ERROR: Reached end of queue_actions without an operation. That's weird."
			# XXX need to mark this planet so we ignore it at least for a timed_flag
			ass_op_abort = yes
		}
	}
}

ass_stage2_fleet_move = {
	PREVPREV = {
		fleet = {
			set_fleet_flag = "autonomous_initial_order" # Removed instantly
			set_fleet_flag = "autonomous_operation"
			queue_actions = {
				move_to = PREVPREV
				repeat = {
					while = {
						id = assFleetMove.1
						NOT = { is_fleet_idle = yes }
					}
					wait = 7
				}
				effect = {
					id = assFleetMove.2
					PREV = { ass_stage2_fleet_reached = yes }
				}
			}
		}
	}
}

###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


# Hopefully, keeping AI assemblers locked prevents the AI from
# ordering the ship around. I don't know if it does, but I hope so.
ass_stage4_unlock_ship = {
	if = { limit = { owner = { is_ai = no } }
		fleet = { set_event_locked = no }
	}
}

ass_stage4_operation_complete = {
	log = "[this.GetName]: Operation complete."

	ass_3rd_op_complete = yes

	# Operation types
	remove_ship_flag = "ass_op_dock"
	remove_ship_flag = "ass_op_minerals"
	remove_ship_flag = "ass_op_energy"
	remove_ship_flag = "ass_op_research"
	remove_ship_flag = "ass_op_observation"
	remove_ship_flag = "ass_op_military"
	remove_ship_flag = "ass_op_marker"
	remove_ship_flag = "ass_op_wormhole"

	# Other flags that _require_ removal
	# - none for now

	# Other flags we want to remove, simply
	# because we dont want to clutter up the debugtooltip.
	# Dont add any here that _require_ removal.
	remove_ship_flag = "ass_refund_if_aborted"
	remove_ship_flag = "ass_waiting_for_cash"
	remove_ship_flag = "ass_station_xlarge"
	remove_ship_flag = "ass_station_large"
	remove_ship_flag = "ass_station_medium"
	remove_ship_flag = "ass_station_small"

	ass_stage4_unlock_ship = yes

	fleet = {
		remove_fleet_flag = "autonomous_initial_order"
		remove_fleet_flag = "autonomous_operation"
		clear_fleet_actions = THIS
	}
}

# THIS needs to be the ship
ass_stage4_abort_operation = {
	log = "[this.GetName]: ERROR: Operation forcefully aborted."
	ass_relation_invalidate = yes

	if = {
		limit = { has_ship_flag = "ass_refund_if_aborted" }
		ass_accounting_refund = yes
		remove_ship_flag = "ass_refund_if_aborted"
	}

	ass_3rd_op_abort = yes
	ass_relation_remove_any = yes
	ass_stage4_operation_complete = yes
}

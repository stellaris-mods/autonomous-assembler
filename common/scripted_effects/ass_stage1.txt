
# Stages
# 1: Initialization, target selection and relation mapping
# 2: En route to target
# 3: At target
# 4: Operation complete

# This is only invoked by assShip.1, which is only triggered by
# on_ship_built or by MTTH after checking ass_has_operation and is_fleet_idle,
# and in both cases the ship should be entirely idle.
ass_init_stage1 = {
	if = {
		limit = { owner = { has_country_flag = "ass_halt_operations" } }
			ass_stage1_dock_p1 = yes
		else = {
			switch = {
				trigger = has_component
				ASS_EXPANSION_MILITARY_1 = { ass_stage1_military_p1 = yes }
				ASS_EXPANSION_MINERALS_1 = { ass_stage1_minerals_p1 = yes }
				ASS_EXPANSION_ENERGY_1 = { ass_stage1_energy_p1 = yes }
				ASS_EXPANSION_RESEARCH_1 = { ass_stage1_research_p1 = yes }
				#ASS_EXPANSION_OBSERVATION_1 = { ass_stage1_observation_p1 = yes }
				ASS_EXPANSION_WORMHOLE_1 = { ass_stage1_wormhole_p1 = yes }
			}
			# Allow 3rd-parties to override the above
			ass_init_stage1_3rd_p1 = yes

			if = {
				limit = { ass_has_operation = no }
				#log = "Checking 2.2..."
				switch = {
					trigger = has_component
					ASS_EXPANSION_MILITARY_2 = { ass_stage1_military_p2 = yes }
					ASS_EXPANSION_MINERALS_2 = { ass_stage1_minerals_p2 = yes }
					ASS_EXPANSION_ENERGY_2 = { ass_stage1_energy_p2 = yes }
					ASS_EXPANSION_RESEARCH_2 = { ass_stage1_research_p2 = yes }
					ASS_EXPANSION_WORMHOLE_2 = { ass_stage1_wormhole_p2 = yes }
				}
				# Allow 3rd-parties to override the above
				ass_init_stage1_3rd_p2 = yes
			}
		}
	}
}

ass_op_complete = {
	log = "[this.GetName]: Operation complete."

	ass_3rd_op_complete = yes

	# Operation types
	remove_ship_flag = "ass_go_home"
	remove_ship_flag = "ass_minerals"
	remove_ship_flag = "ass_energy"
	remove_ship_flag = "ass_research"
	remove_ship_flag = "ass_observation"
	remove_ship_flag = "ass_military"
	remove_ship_flag = "ass_wormhole"

	# Other flags that _require_ removal
	# - none for now

	# Other flags we want to remove, simply
	# because we dont want to clutter up the debugtooltip.
	# Dont add any here that _require_ removal.
	remove_ship_flag = "ass_refund_if_aborted"
	remove_ship_flag = "ass_waiting_for_cash"
	remove_ship_flag = "ass_station_xlarge"
	remove_ship_flag = "ass_station_large"
	remove_ship_flag = "ass_station_medium"
	remove_ship_flag = "ass_station_small"

	fleet = {
		set_event_locked = no
		remove_fleet_flag = "autonomous_initial_order"
		remove_fleet_flag = "autonomous_operation"
		clear_fleet_actions = THIS
	}
}

# THIS needs to be the ship
ass_op_abort = {
	log = "[this.GetName]: Operation forcefully aborted."
	if = {
		limit = { has_ship_flag = "ass_refund_if_aborted" }
		ass_accounting_refund = yes
		remove_ship_flag = "ass_refund_if_aborted"
	}

	ass_3rd_op_abort = yes
	ass_unmark_target = yes
	ass_op_complete = yes
}

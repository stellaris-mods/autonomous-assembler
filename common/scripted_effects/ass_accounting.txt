###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###

###############################################################################
#
# API METHODS
#
# The API only updates the variables that are needed at the time.
#
# ass_account_update_empire (THIS = country)
#   Updates the empire totals based on *Cost variables on any_owned_ship.
#
# ass_account_update_ship (THIS = ship)
#   Copies needed variables from empire to an assembler ships fleet scope.
#
# ass_account_update_operation_totals (THIS = ship)
#   Updates the AssMin* variables depending on cost/reserves.
#
# ass_account_grabdatcash (THIS = ship)
#   Grabs all operation costs from the owner, depending on *Cost variables.
#
# ass_account_refund (THIS = ship)
#   Refunds all operation costs to the owner, depending on *Cost variables.
#
# ass_account_update_reserve (THIS = country)
#   Copies the AssReserve empire variable to all owned assembler fleets.
#
# The usual sequence of events:
# 1. An operation is selected, it sets 1-3 of the *Cost variables.
# 2. The ship arrives at its target.
# 3. ass_account_update_empire
# 4. ass_account_update_ship
# 5. ass_account_update_operation_totals
# 6. ass_can_afford
# 7. Either ass_account_grabdatcash, or recheck from #3 on_monthly_pulse
#
###############################################################################
#
# API VARIABLES
#
# Note that most of the variables are only updated when they need to be.
# If you run with 'debugtooltip', they will not be accurate except on the day
# that they are used.
#
# EMPIRE VARIABLES
#
# AssReserve                       Empires configured AssReserve.
#
# AssMinerals                      Empires total minerals.
# AssInfluence                     Empires total influence.
# AssEnergy                        Empires total energy.
#
# ASSEMBLER FLEET VARIABLES
#
# AssOperationCost                 Operation cost in minerals, or zero.
# AssOperationCostInfluence        Operation cost in influence, or zero.
# AssOperationCostEnergy           Operation cost in energy, or zero.
#
# AssReserve                       Empires configured AssReserve.
# AssMinMinerals                   AssOperationCost          + AssReserve
# AssMinInfluence                  AssOperationCostInfluence + 100 (!)
# AssMinEnergy                     AssOperationCostEnergy    + AssReserve
#
# AssMinerals                      Empires total minerals.
# AssInfluence                     Empires total influence.
# AssEnergy                        Empires total energy.
#
###############################################################################

# THIS = country
ass_account_update_empire = {
	ass_account_internal_update_empire_minerals = yes
	ass_account_internal_update_empire_energy = yes
	ass_account_internal_update_empire_influence = yes
}

ass_account_update_ship = {
	fleet = {
		set_variable = { which = "AssMinerals" value = 0 }
		set_variable = { which = "AssEnergy" value = 0 }
		set_variable = { which = "AssInfluence" value = 0 }

		ass_account_internal_update_fleet_minerals = yes
		ass_account_internal_update_fleet_energy = yes
		ass_account_internal_update_fleet_influence = yes
	}
}

# Please see ass_accounting.txt for variable documentation
ass_account_update_operation_totals = {
	fleet = {
		set_variable = { which = "AssMinMinerals"  value = "AssOperationCost" }
		set_variable = { which = "AssMinEnergy"    value = "AssOperationCostEnergy" }
		set_variable = { which = "AssMinInfluence" value = "AssOperationCostInfluence" }

		if = { limit = { check_variable = { which = "AssMinMinerals" value > 0 } }
			change_variable = { which = "AssMinMinerals" value = "AssReserve" }
		}
		if = { limit = { check_variable = { which = "AssMinEnergy" value > 0 } }
			change_variable = { which = "AssMinEnergy" value = "AssReserve" }
		}
		if = { limit = { check_variable = { which = "AssMinInfluence" value > 0 } }
			change_variable = { which = "AssMinInfluence" value = 100 }
		}
	}
}

ass_account_grabdatcash = {
	# Makes sure we refund the country AssOperationCost if we abort.
	set_ship_flag = "ass_refund_if_aborted"
	ass_account_internal_grab_minerals = yes
	ass_account_internal_grab_energy = yes
	ass_account_internal_grab_influence = yes
}

ass_account_refund = {
	ass_account_internal_refund_minerals = yes
	ass_account_internal_refund_energy = yes
	ass_account_internal_refund_influence = yes
}

ass_account_update_reserve = {
	every_owned_fleet = {
		limit = { is_ship_size = autonomous_assembler }
		set_variable = { which = "AssReserve" value = 0 }
		owner = {
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssReserve" }
			# Copy to ship
			while = {
				limit = { check_variable = { which = "AssTmp" value > 1000 } }
				PREV = { change_variable = { which = "AssReserve" value = 1000 } }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				PREV = { change_variable = { which = "AssReserve" value = 100 } }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				PREV = { change_variable = { which = "AssReserve" value = 10 } }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				PREV = { change_variable = { which = "AssReserve" value = 1 } }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
		assdbg_reserves_updated = yes
	}
}

###############################################################################
#
# Rest of the file contains internal implementation details that you should
# be able to ignore safely and never use outside this file.
#

ass_account_internal_update_empire_minerals = {
	if = {
		limit = {
			any_owned_ship = {
				is_ship_size = autonomous_assembler
				fleet = { check_variable = { which = "AssOperationCost" value > 0 } }
			}
		}
		set_variable = { which = "AssMinerals" value = 0 }
		while = {
			limit = { minerals > 10000 }
			add_minerals = -10000
			change_variable = { which = "AssMinerals" value = 10000 }
		}
		while = {
			limit = { minerals > 1000 }
			add_minerals = -1000
			change_variable = { which = "AssMinerals" value = 1000 }
		}
		while = {
			limit = { minerals > 100 }
			add_minerals = -100
			change_variable = { which = "AssMinerals" value = 100 }
		}
		while = {
			limit = { minerals > 10 }
			add_minerals = -10
			change_variable = { which = "AssMinerals" value = 10 }
		}
		while = {
			limit = { minerals > 0 }
			add_minerals = -1
			change_variable = { which = "AssMinerals" value = 1 }
		}
		# Make a copy we can mangle
		set_variable = { which = "AssTmp" value = "AssMinerals" }
		# And give the country its minerals back
		while = {
			limit = { check_variable = { which = "AssTmp" value > 10000 } }
			add_minerals = 10000
			subtract_variable = { which = "AssTmp" value = 10000 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 1000 } }
			add_minerals = 1000
			subtract_variable = { which = "AssTmp" value = 1000 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 100 } }
			add_minerals = 100
			subtract_variable = { which = "AssTmp" value = 100 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 10 } }
			add_minerals = 10
			subtract_variable = { which = "AssTmp" value = 10 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 0 } }
			add_minerals = 1
			subtract_variable = { which = "AssTmp" value = 1 }
		}
	}
}
# Counts the available energy
ass_account_internal_update_empire_energy = {
	if = {
		limit = {
			any_owned_ship = {
				is_ship_size = autonomous_assembler
				fleet = { check_variable = { which = "AssOperationCostEnergy" value > 0 } }
			}
		}
		set_variable = { which = "AssEnergy" value = 0 }
		while = {
			limit = { energy > 10000 }
			add_energy = -10000
			change_variable = { which = "AssEnergy" value = 10000 }
		}
		while = {
			limit = { energy > 1000 }
			add_energy = -1000
			change_variable = { which = "AssEnergy" value = 1000 }
		}
		while = {
			limit = { energy > 100 }
			add_energy = -100
			change_variable = { which = "AssEnergy" value = 100 }
		}
		while = {
			limit = { energy > 10 }
			add_energy = -10
			change_variable = { which = "AssEnergy" value = 10 }
		}
		while = {
			limit = { energy > 0 }
			add_energy = -1
			change_variable = { which = "AssEnergy" value = 1 }
		}
		# Make a copy we can mangle
		set_variable = { which = "AssTmp" value = "AssEnergy" }
		# And give the country its energy back
		while = {
			limit = { check_variable = { which = "AssTmp" value > 10000 } }
			add_energy = 10000
			subtract_variable = { which = "AssTmp" value = 10000 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 1000 } }
			add_energy = 1000
			subtract_variable = { which = "AssTmp" value = 1000 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 100 } }
			add_energy = 100
			subtract_variable = { which = "AssTmp" value = 100 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 10 } }
			add_energy = 10
			subtract_variable = { which = "AssTmp" value = 10 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 0 } }
			add_energy = 1
			subtract_variable = { which = "AssTmp" value = 1 }
		}
	}
}

ass_account_internal_update_empire_influence = {
	if = {
		limit = {
			any_owned_ship = {
				is_ship_size = autonomous_assembler
				fleet = { check_variable = { which = "AssOperationCostInfluence" value > 0 } }
			}
		}
		set_variable = { which = "AssInfluence" value = 0 }
		while = {
			limit = { influence > 100 }
			add_influence = -100
			change_variable = { which = "AssInfluence" value = 100 }
		}
		while = {
			limit = { influence > 10 }
			add_influence = -10
			change_variable = { which = "AssInfluence" value = 10 }
		}
		while = {
			limit = { influence > 0 }
			add_influence = -1
			change_variable = { which = "AssInfluence" value = 1 }
		}
		# Make a copy we can mangle
		set_variable = { which = "AssTmp" value = "AssInfluence" }
		# And give the country its influence back
		while = {
			limit = { check_variable = { which = "AssTmp" value > 100 } }
			add_influence = 100
			subtract_variable = { which = "AssTmp" value = 100 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 10 } }
			add_influence = 10
			subtract_variable = { which = "AssTmp" value = 10 }
		}
		while = {
			limit = { check_variable = { which = "AssTmp" value > 0 } }
			add_influence = 1
			subtract_variable = { which = "AssTmp" value = 1 }
		}
	}
}

ass_account_internal_update_fleet_minerals = {
	if = { limit = { check_variable = { which = "AssOperationCost" value > 0 } }
		owner = {
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssMinerals" }
			# Copy to fleet
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10000 } }
				PREV = { change_variable = { which = "AssMinerals" value = 10000 } }
				subtract_variable = { which = "AssTmp" value = 10000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 1000 } }
				PREV = { change_variable = { which = "AssMinerals" value = 1000 } }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				PREV = { change_variable = { which = "AssMinerals" value = 100 } }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				PREV = { change_variable = { which = "AssMinerals" value = 10 } }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				PREV = { change_variable = { which = "AssMinerals" value = 1 } }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_update_fleet_energy = {
	if = { limit = { check_variable = { which = "AssOperationCostEnergy" value > 0 } }
		owner = {
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssEnergy" }
			# Copy to fleet
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10000 } }
				PREV = { change_variable = { which = "AssEnergy" value = 10000 } }
				subtract_variable = { which = "AssTmp" value = 10000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 1000 } }
				PREV = { change_variable = { which = "AssEnergy" value = 1000 } }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				PREV = { change_variable = { which = "AssEnergy" value = 100 } }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				PREV = { change_variable = { which = "AssEnergy" value = 10 } }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				PREV = { change_variable = { which = "AssEnergy" value = 1 } }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_update_fleet_influence = {
	if = { limit = { check_variable = { which = "AssOperationCostInfluence" value > 0 } }
		owner = {
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssInfluence" }
			# Copy to fleet
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				PREV = { change_variable = { which = "AssInfluence" value = 100 } }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				PREV = { change_variable = { which = "AssInfluence" value = 10 } }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				PREV = { change_variable = { which = "AssInfluence" value = 1 } }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_grab_minerals = {
	fleet = {
		if = { limit = { check_variable = { which = "AssOperationCost" value > 0 } }
			assdbg_grabbing_minerals = yes
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssOperationCost" }
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 1000 }
					owner = { minerals > 1000 }
				}
				owner = { add_minerals = -1000 }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 100 }
					owner = { minerals > 100 }
				}
				owner = { add_minerals = -100 }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 10 }
					owner = { minerals > 10 }
				}
				owner = { add_minerals = -10 }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 0 }
					owner = { minerals > 0 }
				}
				owner = { add_minerals = -1 }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_grab_energy = {
	fleet = {
		if = { limit = { check_variable = { which = "AssOperationCostEnergy" value > 0 } }
			assdbg_grabbing_energy = yes
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssOperationCostEnergy" }
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 1000 }
					owner = { energy > 1000 }
				}
				owner = { add_energy = -1000 }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 100 }
					owner = { energy > 100 }
				}
				owner = { add_energy = -100 }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 10 }
					owner = { energy > 10 }
				}
				owner = { add_energy = -10 }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 0 }
					owner = { energy > 0 }
				}
				owner = { add_energy = -1 }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_grab_influence = {
	fleet = {
		if = { limit = { check_variable = { which = "AssOperationCostInfluence" value > 0 } }
			assdbg_grabbing_influence = yes
			# Make a copy we can mangle
			set_variable = { which = "AssTmp" value = "AssOperationCostInfluence" }
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 100 }
					owner = { influence > 100 }
				}
				owner = { add_influence = -100 }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 10 }
					owner = { influence > 10 }
				}
				owner = { add_influence = -10 }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = {
					check_variable = { which = "AssTmp" value > 0 }
					owner = { influence > 0 }
				}
				owner = { add_influence = -1 }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_refund_minerals = {
	fleet = {
		if = { limit = { check_variable = { which = "AssOperationCost" value > 0 } }
			assdbg_refunding_minerals = yes
			# Make a copy we can mangle. Could "probably" mangle
			# the main variable now, since we're probably aborting operation.
			# No need to take any risks with future behaviors.
			set_variable = { which = "AssTmp" value = "AssOperationCost" }
			while = {
				limit = { check_variable = { which = "AssTmp" value > 1000 } }
				owner = { add_minerals = 1000 }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				owner = { add_minerals = 100 }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				owner = { add_minerals = 10 }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				owner = { add_minerals = 1 }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_refund_energy = {
	fleet = {
		if = { limit = { check_variable = { which = "AssOperationCostEnergy" value > 0 } }
			assdbg_refunding_energy = yes
			set_variable = { which = "AssTmp" value = "AssOperationCostEnergy" }
			while = {
				limit = { check_variable = { which = "AssTmp" value > 1000 } }
				owner = { add_energy = 1000 }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				owner = { add_energy = 100 }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				owner = { add_energy = 10 }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				owner = { add_energy = 1 }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

ass_account_internal_refund_influence = {
	fleet = {
		if = { limit = { check_variable = { which = "AssOperationCostInfluence" value > 0 } }
			assdbg_refunding_influence = yes
			set_variable = { which = "AssTmp" value = "AssOperationCostInfluence" }
			while = {
				limit = { check_variable = { which = "AssTmp" value > 1000 } }
				owner = { add_influence = 1000 }
				subtract_variable = { which = "AssTmp" value = 1000 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 100 } }
				owner = { add_influence = 100 }
				subtract_variable = { which = "AssTmp" value = 100 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 10 } }
				owner = { add_influence = 10 }
				subtract_variable = { which = "AssTmp" value = 10 }
			}
			while = {
				limit = { check_variable = { which = "AssTmp" value > 0 } }
				owner = { add_influence = 1 }
				subtract_variable = { which = "AssTmp" value = 1 }
			}
		}
	}
}

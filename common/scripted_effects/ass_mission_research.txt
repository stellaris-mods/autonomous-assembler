
# IF ONLY ON_FLEET_ENTER_ORBIT WAS RELIABLE
# Here is how the effect would look:
# ass_research_move = {
# 	ass_mark_planet = yes
# 	PREVPREV = {
# 		set_ship_flag = "ass_research"
# 		fleet = {
# 			set_fleet_flag = "autonomous_initial_order" # Removed instantly
# 			set_fleet_flag = "autonomous_mission"
# 			queue_actions = {
# 				orbit_planet = PREVPREV
# 			}
# 		}
# 	}
# }
# But nooooooooooo.

ass_research_move = {
	ass_mark_planet = yes
	PREVPREV = {
		set_ship_flag = "ass_research"
		fleet = {
			set_fleet_flag = "autonomous_initial_order" # Removed instantly
			set_fleet_flag = "autonomous_mission"
			queue_actions = {
				orbit_planet = PREVPREV
				repeat = {
					while = {
						id = assResearchMove.1
						NOT = { is_fleet_idle = yes }
					}
					wait = 7
				}
				effect = {
					id = assResearchMove.2
					PREV = { ass_station_mission_reached_destination = yes }
				}
			}
		}
	}
}

ass_research_priority_1 = {
	# Find any research deposits in colonized systems, or
	# any research deposits bigger than 2
	closest_system = {
		limit = {
			is_inside_border = ROOT.owner
			ass_is_friendly_system = yes
			ass_check_research_priority_1 = yes
		}
		random_system_planet = {
			limit = {
				ass_valid_research_planet = yes
				OR = {
					ass_has_strategic_research = yes
					ass_has_valuable_research = yes
					#ass_has_any_research = yes # covered by valid
				}
			}
			log = "[Prev.Prev.GetName]: Moving to [this.GetName] (Research P1)"
			ass_research_move = yes
		}
	}
}

ass_research_priority_2 = {
	# Find any research deposit
	closest_system = {
		limit = {
			is_inside_border = ROOT.owner
			any_planet = {
				ass_valid_research_planet = yes
			}
			ass_is_friendly_system = yes
		}
		random_system_planet = {
			limit = {
				ass_valid_research_planet = yes
			}
			log = "[Prev.Prev.GetName]: Moving to [this.GetName] (Research P2)"
			ass_research_move = yes
		}
	}
}

###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###

on_game_start = {
	events = {
		assInit.1
		addonMenu.10
	}
}
on_press_begin = {
	events = {
		addonMenu.20
		assMenu.1
	}
}
on_tech_increased = {
	events = {
		assInit.100
		assCountry.100
		assCountry.101
	}
}

on_monthly_pulse = {
	events = {
		# check if any ships are waiting for resources
		# we have assShip.101 though
		assShip.102
		assShip.2000
	}
}

on_ship_built = { events = { assShip.1 } }
on_ship_order = { events = { assShip.100 } }

on_building_ass_military_complex = { events = { assMarker.200 } }

# There's a few cases where we need to mark the system we're in/from
# as a dangerous place.
#
# 1. We were destroyed.
on_ship_destroyed_victim = { events = { assHostile.100 } }
# 2. We enter battle in the system.
on_entering_battle = { events = { assHostile.200 } }
# 3. We survived emergency FTL.
on_emergency_ftl = { events = { assHostile.300 } }
# 4. We enter a system with hostiles in it, and our mission is in the system.
on_entering_system_fleet = { events = { assHostile.400 } }

# XXX need to check when a hostile fleet enters a system we are building in
# XXX that means we need to GTFO, or at least unlock fleet, so that we can
# XXX be attacked at all

# XXX can we add custom notifications now?

# XXX detect fleet disbanded

# Triggered when an Empire has fleets within another Empire's borders.
# This = receiver
# From = sender
# FromFrom = fleet
# FromFromFrom = system
on_enforce_borders = {
	events = {
	}
}
